apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: logging
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/*_logging-test_*.log
      exclude_path ["/var/log/containers/fluentd*.log"]
      pos_file /var/log/fluentd-logging-test.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<time>.+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$/
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
      </parse>
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
      kubernetes_url https://kubernetes.default.svc:443
      verify_ssl true
      ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    </filter>

    <filter kubernetes.**>
      @type grep
      <regexp>
        key $.kubernetes.namespace_name
        pattern ^logging-test$
      </regexp>
    </filter>

    # Parse AUDIT log fields
    <filter kubernetes.**>
      @type parser
      key_name log
      reserve_data true
      <parse>
        @type regexp
        expression /\[AUDIT\]\s*user=(?<User>\w+),\s*action=(?<Action>\w+),\s*project=(?<Project>\w+),\s*status=(?<Status>\w+),\s*Field=(?<Field>\w+),\s*old_value=(?<Old_value>\w+),\s*new_value=(?<New_value>\w+)/
      </parse>
    </filter>

    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        timestamp ${Time.now.utc.strftime('%Y-%m-%dT%H:%M:%S.%3NZ')}
        es_index ${if record['log'] && record['log'].include?('[AUDIT]'); 'audit-trail'; else; (record.dig('kubernetes','labels','app') || record.dig('kubernetes','container_name') || 'generic-logs'); end}
      </record>
    </filter>

    <match kubernetes.**>
      @type elasticsearch
      host 172.21.0.1
      port 9200
      user elastic
      password changeme
      scheme http
      ssl_verify false
      target_index_key es_index
      suppress_type_name true
      <buffer>
        @type memory
        flush_interval 10s
        chunk_limit_size 2M
        queue_limit_length 8
        retry_max_times 3
      </buffer>
    </match>