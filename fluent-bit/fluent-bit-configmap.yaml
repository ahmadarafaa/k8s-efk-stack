apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: logging
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         10
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
        storage.path  /var/log/flb-storage/
        storage.sync  normal
        storage.checksum  off
        storage.backlog.mem_limit  50MB

    [INPUT]
        Name              tail
        Path              /var/log/containers/*_logging-test_*.log
        Exclude_Path      /var/log/containers/fluent-bit*.log
        Parser            cri
        Tag               kube.*
        Refresh_Interval  5
        Mem_Buf_Limit     100MB
        Skip_Long_Lines   On
        Skip_Empty_Lines  On
        Read_from_Head    true
        storage.type      filesystem

    # Add Kubernetes metadata
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On

    # Filter only logging-test namespace
    [FILTER]
        Name    grep
        Match   kube.*
        Regex   $kubernetes['namespace_name'] ^logging-test$

    # Parse AUDIT log fields
    [FILTER]
        Name    parser
        Match   kube.*
        Key_Name log
        Parser  audit_parser
        Reserve_Data On
        Preserve_Key On

    # Add current timestamp and determine index
    [FILTER]
        Name    lua
        Match   kube.*
        Script  /fluent-bit/etc/index_router.lua
        Call    determine_index

    # Rewrite tags based on content for routing
    [FILTER]
        Name                rewrite_tag
        Match               kube.*
        Rule                $log .*\[AUDIT\].* audit.logs false
        Rule                $kubernetes['labels']['app'] ^api-gateway$ api.logs false
        Rule                $kubernetes['labels']['app'] ^jobs-worker$ jobs.logs false  
        Rule                $kubernetes['labels']['app'] ^audit-service$ audit-service.logs false
        Emitter_Name        re_emitted
        Emitter_Storage.type  filesystem

    # Remove es_index field from all routed logs
    [FILTER]
        Name    record_modifier
        Match   *.logs
        Remove_key es_index

    # Output for AUDIT logs
    [OUTPUT]
        Name                es
        Match               audit.logs
        Host                ${ELASTICSEARCH_HOST}
        Port                ${ELASTICSEARCH_PORT}
        HTTP_User           ${ELASTICSEARCH_USERNAME}
        HTTP_Passwd         ${ELASTICSEARCH_PASSWORD}
        tls                 Off
        tls.verify          Off
        Index               audit-trail
        Type                _doc
        Suppress_Type_Name  On
        Buffer_Size         5MB
        Retry_Limit         3

    # Output for API Gateway logs 
    [OUTPUT]
        Name                es
        Match               api.logs
        Host                ${ELASTICSEARCH_HOST}
        Port                ${ELASTICSEARCH_PORT}
        HTTP_User           ${ELASTICSEARCH_USERNAME}
        HTTP_Passwd         ${ELASTICSEARCH_PASSWORD}
        tls                 Off
        tls.verify          Off
        Index               api-gateway
        Type                _doc
        Suppress_Type_Name  On
        Buffer_Size         5MB
        Retry_Limit         3

    # Output for Jobs Worker logs
    [OUTPUT]
        Name                es
        Match               jobs.logs
        Host                ${ELASTICSEARCH_HOST}
        Port                ${ELASTICSEARCH_PORT}
        HTTP_User           ${ELASTICSEARCH_USERNAME}
        HTTP_Passwd         ${ELASTICSEARCH_PASSWORD}
        tls                 Off
        tls.verify          Off
        Index               jobs-worker
        Type                _doc
        Suppress_Type_Name  On
        Buffer_Size         5MB
        Retry_Limit         3

    # Output for Audit Service logs (non-AUDIT)
    [OUTPUT]
        Name                es
        Match               audit-service.logs
        Host                ${ELASTICSEARCH_HOST}
        Port                ${ELASTICSEARCH_PORT}
        HTTP_User           ${ELASTICSEARCH_USERNAME}
        HTTP_Passwd         ${ELASTICSEARCH_PASSWORD}
        tls                 Off
        tls.verify          Off
        Index               audit-service
        Type                _doc
        Suppress_Type_Name  On
        Buffer_Size         5MB
        Retry_Limit         3

  parsers.conf: |
    [PARSER]
        Name        cri
        Format      regex
        Regex       ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name        audit_parser
        Format      regex
        Regex       \[AUDIT\]\s*user=(?<User>\w+),\s*action=(?<Action>\w+),\s*project=(?<Project>\w+),\s*status=(?<Status>\w+),\s*Field=(?<Field>\w+),\s*old_value=(?<Old_value>\w+),\s*new_value=(?<New_value>\w+)

  index_router.lua: |
    function determine_index(tag, timestamp, record)
        -- Determine index based on log content
        if record["log"] and string.find(record["log"], "%[AUDIT%]") then
            record["es_index"] = "audit-trail"
        else
            -- Use deployment name from kubernetes labels or container name
            if record["kubernetes"] and record["kubernetes"]["labels"] and record["kubernetes"]["labels"]["app"] then
                record["es_index"] = record["kubernetes"]["labels"]["app"]
            elseif record["kubernetes"] and record["kubernetes"]["container_name"] then
                record["es_index"] = record["kubernetes"]["container_name"]
            else
                record["es_index"] = "generic-logs"
            end
        end
        
        
        return 1, timestamp, record
    end
