apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-minimal-basic-config
  namespace: logging
data:
  fluent.conf: |
    # Minimal Basic Configuration - Simple log collection without advanced features
    
    # Source: Basic container log collection
    <source>
      @type tail
      path /var/log/containers/*.log
      exclude_path ["/var/log/containers/fluentd*.log"]
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      <parse>
        @type regexp
        expression /^(?<time>.+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$/
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
      </parse>
    </source>

    # Add basic Kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
      kubernetes_url "#{ENV['KUBERNETES_URL']}"
      verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL']}"
      ca_file "#{ENV['KUBERNETES_CA_FILE']}"
      skip_labels false
      skip_container_metadata true
      skip_master_url true
      skip_namespace_metadata true
    </filter>

    # Add timestamp
    <filter kubernetes.**>
      @type record_transformer
      enable_ruby
      <record>
        @timestamp ${Time.now.strftime('%Y-%m-%dT%H:%M:%S.%3NZ')}
      </record>
    </filter>

    # Simple output: All logs to single index
    <match kubernetes.**>
      @type elasticsearch
      host "#{ENV['ELASTICSEARCH_HOST']}"
      port "#{ENV['ELASTICSEARCH_PORT']}"
      user "#{ENV['ELASTICSEARCH_USERNAME']}"
      password "#{ENV['ELASTICSEARCH_PASSWORD']}"
      scheme "#{ENV['ELASTICSEARCH_SCHEME']}"
      ssl_verify false
      
      index_name kubernetes-logs
      suppress_type_name true
      
      <buffer>
        @type memory
        flush_mode interval
        flush_interval 10s
        retry_max_times 2
      </buffer>
    </match>

    # Drop Fluentd internal logs
    <match fluent.**>
      @type null
    </match>

    # Fallback: Drop any other logs
    <match **>
      @type null
    </match>